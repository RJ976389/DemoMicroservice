server.port=9020
server.servlet.context-path=/omdemoserviceadapter
server.error.include-message=always
spring.profiles.active=DEV

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=soi_service
spring.datasource.username=postgres
spring.datasource.password=welcome123
spring.datasource.driver-class-name=org.postgresql.Driver
spring.sql.init.mode=always

# Hikari Connection Pool Properties
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connectionTimeout=60000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=${om.naming.prefix}demo_cloud_service_adapter_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.session-timeout-ms=10000
spring.kafka.consumer.max-poll-interval-ms=300000
spring.kafka.consumer.max-poll-records=500

spring.kafka.properties.schema-registry-url=http://localhost:8081

#kafka transactional producer properties
spring.kafka.producer[0].bootstrap-servers=localhost:9092
spring.kafka.producer[0].properties.transactional-id=${om.naming.prefix}demo_cloud_service-adpt-tx-
spring.kafka.producer[0].key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer[0].value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer[0].batch.size=16384
spring.kafka.producer[0].linger.ms=1
spring.kafka.producer[0].buffer.memory=33554432
spring.kafka.producer[0].enable.idempotence=true
spring.kafka.producer[0].retries=1
spring.kafka.producer[0].acks=all
spring.kafka.producer[0].bean-name=kafkaProducerTransactional

#kafka non transactional producer properties
spring.kafka.producer[1].bootstrap-servers=localhost:9092
spring.kafka.producer[1].key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer[1].value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer[1].batch.size=16384
spring.kafka.producer[1].linger.ms=1
spring.kafka.producer[1].buffer.memory=33554432
spring.kafka.producer[1].enable.idempotence=true
spring.kafka.producer[1].retries=1
spring.kafka.producer[1].acks=all
spring.kafka.producer[1].bean-name=kafkaProducerNonTransactional
#om system properties
om.sysprops.maxRestResponseSizeInMb=100
om.sysprops.nodeType=soi_adapter
om.sysprops.inst.cfg.file=omp.conf
om.sysprops.domainCfgRequired=true
om.sysprops.md.cfg.dir=om-demo-service-adapter/conf
om.sysprops.jdbc.cfg.file=install.properties
om.sysprops.cfgmgr.cfg.path=om-demo-service-adapter/conf
om.sysprops.cfgmgr.install.file=om-demo-service-adapter/conf/install.properties
om.sysprops.md.node.name=${om.naming.prefix}demo_service_adapter_1

#logging configuration
logging.config=om-demo-service-adapter/conf/logback.xml


#om soi adapters properties
om.soi.adapter.name=OM_DEMO_CLOUD
om.soi.adapter.lifecycle_class=com.sigma.om.soi.framework.listener.DefaultSOILifeCycleListener
om.soi.topic.name.prefix=${om.naming.prefix}com.sigma.om.soi.
om.soi.topic.request.suffix=.request
om.soi.topic.stop.suffix=.stop
om.soi.topic.reply.suffix=.reply
om.soi.topic.request_error.suffix=.request_error



# om specific properties
om.service.activity.url=http://localhost:11000/activityservice
om.service.order.url=http://localhost:9001/orderservice
om.service.soi.url=http://localhost:19000/soiservice
om.kafka.consumer.enabled=true
om.kafka.producer.enabled=true
om.kafka.enable_error_handing=true
om.database.enabled=true
om.scheduler.consumer.enabled=true

# om kafka default properties
om.kafka.topic.consumers.default=3
om.kafka.topic.partitions.default=3
om.kafka.topic.replication_factor.default=1
om.kafka.topic.retry_count.default=3
om.kafka.topic.retry_delay.default=10000
om.kafka.topic.enable_default_error_handing.default=false
om.kafka.topic.create_factory=false
om.kafka.topic.create_topic=false

# om naming convention specific properties
om.naming.tenant=core
om.naming.product=om
om.naming.context=namespace
om.naming.env=dev
om.naming.separator=-
om.naming.prefix=${om.naming.tenant}${om.naming.separator}${om.naming.product}${om.naming.separator}${om.naming.context}${om.naming.separator}${om.naming.env}${om.naming.separator}


# om producer topic properties
# om SOIEnrichmentEvent topic properties
om.kafka.topic.soi_enrichment.name=${om.naming.prefix}com.sigma.om.core.soi.SOIEnrichmentEvent
om.kafka.topic.soi_enrichment.message_class=com.sigma.om.event.message.soi.SOIEnrichmentEventMessage
om.kafka.topic.soi_enrichment.producer_config=true

# om consumer topic properties
# om soi request topic properties
om.kafka.topic.request.name=${om.soi.topic.name.prefix}${om.soi.adapter.name}${om.soi.topic.request.suffix}
om.kafka.topic.request.consumer_config=true
om.kafka.topic.request.groupId=${spring.kafka.consumer.group-id}
om.kafka.topic.request.create_factory=true
om.kafka.topic.request.create_topic=false

# om soi request error topic properties
om.kafka.topic.request_error.name=${om.soi.topic.name.prefix}${om.soi.adapter.name}${om.soi.topic.request_error.suffix}
om.kafka.topic.request_error.consumer_config=true
om.kafka.topic.request_error.groupId=${spring.kafka.consumer.group-id}
om.kafka.topic.request_error.create_factory=true
om.kafka.topic.request_error.create_topic=false

# om soi stop topic properties
om.kafka.topic.stop.name=${om.soi.topic.name.prefix}${om.soi.adapter.name}${om.soi.topic.stop.suffix}
om.kafka.topic.stop.consumer_config=true
om.kafka.topic.stop.groupId=${spring.kafka.consumer.group-id}
om.kafka.topic.stop.create_factory=true
om.kafka.topic.stop.create_topic=false

# om soi reply topic properties
om.kafka.topic.reply.name=${om.soi.topic.name.prefix}${om.soi.adapter.name}${om.soi.topic.reply.suffix}
om.kafka.topic.reply.consumer_config=true
om.kafka.topic.reply.groupId=${spring.kafka.consumer.group-id}
om.kafka.topic.reply.message_class=com.sigma.om.event.message.interaction.InteractionEventMessage
om.kafka.topic.reply.create_factory=true
om.kafka.topic.reply.create_topic=false

# om Jaeger Tracing properties
spring.data.tracing.enable=false
spring.data.tracing.header=x-trace-id
spring.data.jaeger.sampler.type=const
spring.data.jaeger.sampler.param=1
spring.data.jaeger.log-spans=true
spring.application.name=${om.naming.prefix}om-demo-service-adapter
opentracing.spring.cloud.jdbc.withActiveSpanOnly=true

# om scheduler order event topic properties
om.kafka.topic.scheduler_order.name=${om.naming.prefix}com.sigma.om.core.order.OrderEvent
om.kafka.topic.scheduler_order.consumer_config=true
om.kafka.topic.scheduler_order.groupId=${spring.kafka.consumer.group-id}
om.kafka.topic.scheduler_order.partitions=3
om.kafka.topic.scheduler_order.consumers=1
om.kafka.topic.scheduler_order.replication_factor=1
om.kafka.topic.scheduler_order.retry_count=1
om.kafka.topic.scheduler_order.retry_delay=1000
om.kafka.topic.scheduler_order.create_factory=true
om.kafka.topic.scheduler_order.create_topic=false

# entity spec repository caching configuration
om.entity.spec.cache.enabled=true
om.entity.spec.cache.timeToIdleSeconds=300
om.entity.spec.cache.maxEntriesLocalHeap=100
om.entity.spec.cache.maxEntriesLocalDisk=0
om.entity.spec.cache.timeToLiveSeconds=0
om.entity.spec.cache.statistics=false
om.entity.spec.cache.compressObjects=false

# entity spec DB repository caching configuration
om.entity.spec.db.cache.enabled=true
om.entity.spec.db.cache.timeToIdleSeconds=300
om.entity.spec.db.cache.maxEntriesLocalHeap=100
om.entity.spec.db.cache.maxEntriesLocalDisk=0
om.entity.spec.db.cache.timeToLiveSeconds=0
om.entity.spec.db.cache.statistics=false
om.entity.spec.db.cache.compressObjects=false

# Properties for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.exposure.exclude=env,beans
management.metrics.tags.application=${spring.application.name}
management.endpoints.web.base-path=/om/api/manage

spring.main.allow-circular-references=true

